>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

#The base geometry class tests

#====================== Success Cases =====================

>>> bg = BaseGeometry()
>>> bg.integer_validator("iq", 34)
>>> bg.integer_validator("probability of die today", 65)

#====================== Failure Cases =====================

# Passing a none value
>>> bg.integer_validator("it can't be right", None)
Traceback (most recent call last):
    ...
TypeError: it can't be right must be an integer

# Passing a list
>>> bg.integer_validator("now?", [1, 30, 8])
Traceback (most recent call last):
    ...
TypeError: now? must be an integer

#  Passing a negative value
>>> bg.integer_validator("pepito", -16)
Traceback (most recent call last):
    ...
ValueError: pepito must be greater than 0

#  Passing zero
>>> bg.integer_validator("Isaac", 0)
Traceback (most recent call last):
    ...
ValueError: Isaac must be greater than 0

# Passing a string
>>> bg.integer_validator("elasti","cow")
Traceback (most recent call last):
    ...
TypeError: elasti must be an integer

# Passing a dictionary
>>> bg.integer_validator("book of shadows", {10, 0})
Traceback (most recent call last):
...
TypeError: book of shadows must be an integer

# Passing a boolean
>>> bg.integer_validator("i'm super clever", True)
Traceback (most recent call last):
...
TypeError: i'm super clever must be an integer
