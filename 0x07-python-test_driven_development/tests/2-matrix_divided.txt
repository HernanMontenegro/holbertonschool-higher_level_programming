>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Divide an entire matrix by a divisor

#=================== Usage cases examples =====================

# Giving a matrix of full integers 
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Giving a matrix of mixing integers and floats 
>>> matrix = [[1, 2.0, 3], [4, 5.4, 6]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.7, 3.0]]

#======================= Edge cases ======================

# Giving a matrix with an inpostor string
>>> matrix = [[1, "hey wait a minute... it can't be right", 3], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Giving a matrix with different rows length
>>> matrix = [[1, 2, 3, 23, 69], [4, 5, 6]]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Dividing by zero
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Not giving an int or float as a divisor
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "The Elasticow is real!!!")
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Not giving a matrix of integers at all
>>> matrix = "i'm not a matrix NIEHEHEHEHEHE"
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Matrix including booleans
>>> matrix = [[False, True], [True, 4]]
>>> matrix_divided(matrix, 2)
[[0.0, 0.5], [0.5, 2.0]]

# Giving a null matrix
>>> matrix_divided(None, 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#============================================================================
